name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK 17버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          
      - name: MySQL 실행
        run: docker-compose up -d
        working-directory: ./written-me

      - name: gradlew 파일에 실행 권한 부여
        run: chmod +x ./gradlew
        working-directory: ./written-me

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build -Plocal
        working-directory: ./written-me
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          OPEN_API_KEY: ${{ secrets.OPEN_API_KEY }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}

      - name: 빌드 결과물 출력하기
        run: ls -al

      - name: 빌드된 파일 이름 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar
        working-directory: ./written-me

      - name: SCP로 EC2에 빌드된 파일 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: ./written-me/project.jar
          target: /home/ubuntu/written-server/tobe

      - name: SSH로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            rm -rf /home/ubuntu/written-server/current
            mkdir /home/ubuntu/written-server/current
            mv /home/ubuntu/written-server/tobe/project.jar /home/ubuntu/written-server/current/project.jar
            cd /home/ubuntu/written-server/current
            sudo fuser -k -n tcp 8080 || true
            nohup java -jar project.jar > ./output.log 2>&1 &
            rm -rf /home/ubuntu/written-server/tobe
