plugins {
    id 'org.springframework.boot' version '2.6.8'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    // Kotlin
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.6.21'
    // CGLIB Proxy는 Target class를 상속받아 생성하므로 open을 통한 상속 가능한 상태이어야 한다.
    // https://cheese10yun.github.io/spring-kotlin
    id 'org.jetbrains.kotlin.plugin.spring' version '1.6.21'
    // QueryDSL
    id 'org.jetbrains.kotlin.kapt' version '1.6.21'
}

group = 'com.group'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    // java.lang.ClassNotFoundException: kotlin.reflect.full.KClasses
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.6.21'
    // Kotlin에서 HTTP 요청 시에 JSON parse error 해결
    // 기존의 Jackson 라이브러리는 Java를 위한 것
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.3'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    kapt("com.querydsl:querydsl-apt:5.0.0:jpa")
    kapt("org.springframework.boot:spring-boot-configuration-processor")


    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Kotlin
compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

// Kotlin
compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}